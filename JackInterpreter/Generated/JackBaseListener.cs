//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Jack.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IJackListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class JackBaseListener : IJackListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDeclaration([NotNull] JackParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDeclaration([NotNull] JackParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.classVarDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassVarDec([NotNull] JackParser.ClassVarDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.classVarDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassVarDec([NotNull] JackParser.ClassVarDecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] JackParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] JackParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.subroutineDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubroutineDec([NotNull] JackParser.SubroutineDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.subroutineDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubroutineDec([NotNull] JackParser.SubroutineDecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] JackParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] JackParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.subroutineBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubroutineBody([NotNull] JackParser.SubroutineBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.subroutineBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubroutineBody([NotNull] JackParser.SubroutineBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.varDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDec([NotNull] JackParser.VarDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.varDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDec([NotNull] JackParser.VarDecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.className"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassName([NotNull] JackParser.ClassNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.className"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassName([NotNull] JackParser.ClassNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.subroutineName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubroutineName([NotNull] JackParser.SubroutineNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.subroutineName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubroutineName([NotNull] JackParser.SubroutineNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.varName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarName([NotNull] JackParser.VarNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.varName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarName([NotNull] JackParser.VarNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatements([NotNull] JackParser.StatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatements([NotNull] JackParser.StatementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] JackParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] JackParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.letStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetStatement([NotNull] JackParser.LetStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.letStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetStatement([NotNull] JackParser.LetStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] JackParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] JackParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] JackParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] JackParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.doStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoStatement([NotNull] JackParser.DoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.doStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoStatement([NotNull] JackParser.DoStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] JackParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] JackParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] JackParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] JackParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] JackParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] JackParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.subroutineCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubroutineCall([NotNull] JackParser.SubroutineCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.subroutineCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubroutineCall([NotNull] JackParser.SubroutineCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] JackParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] JackParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOp([NotNull] JackParser.OpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOp([NotNull] JackParser.OpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JackParser.unaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOp([NotNull] JackParser.UnaryOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JackParser.unaryOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOp([NotNull] JackParser.UnaryOpContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
